{
  "name": "digitalsignals",
  "version": "1.0.0",
  "description": "Digital Signal Processing library",
  "author": {
    "name": "Zachary Wemlinger",
    "email": "me@zacharywemlinger.com",
    "url": "http://www.zacharywemlinger.com"
  },
  "license": "MIT",
  "main": "dsp.js",
  "repository": {
    "type": "git",
    "url": "https://github.com/zewemli/dsp.js.git"
  },
  "readme": "                                  \n                                  DSP.js\n\nDSP.js is a comprehensive digital signal processing library for javascript. \nIt includes many functions for signal analysis and generation, including \nOscillators(sine, saw, square, triangle), Window functions (Hann, Hamming, etc), \nEnvelopes(ADSR), IIR Filters(lowpass, highpass, bandpass, notch), FFT and DFT \ntransforms, Delays, Reverb.\n\nModules:\n\n  DFT(bufferSize, sampleRate): Discrete Fourier Transform\n\n    Usage: \n\n    var dft = new DFT(1024, 44100);\n    dft.forward(signal);\n    var spectrum = dft.spectrum;\n\n\n  FFT(bufferSize, sampleRate): Fast Fourier Transform\n\n    Usage:\n\n    var fft = new FFT(2048, 44100);\n    fft.forward(signal);\n    var spectrum = fft.spectrum;\n\n\n  Oscillator(waveform, frequency, amplitude, bufferSize, sampleRate): Signal Generator\n    * Sine wave\n    * Square wave\n    * Saw wave\n    * Triangle wave\n\n    Usage:\n\n    var osc = new Oscillator(SINEWAVE, 440, 1, 2048, 22050);\n    osc.generate();\n    var signal = osc.signal;\n\n\n  ADSR(attack, decay, sustainLevel, sustain, release, sampleRate): Attack-Decay-Sustain-Release Envelope\n    \n    Usage:\n\n    var envelope = new ADSR(0.01, 0.1, 0.5, 0.1, 0.2, 44100);\n    envelope.process(signal);\n\n\n  IIRFilter(filter, cutoff, sampleRate): Infinite Impulse Response Filters\n    * Low Pass Filter\n    * High Pass Filter\n\n    Usage:\n\n    var filter = IIRFilter(LOWPASS, 200, 44100);\n    filter.process(signal);\n\n\n  MultiDelay(maxDelayInSamplesSize, delayInSamples, masterVolume, delayVolume): Delay which feeds back its own delayed signal\t\n  \n    Usage:\n\n    var delay = MultiDelay(44100*5, 44100*1, 1.0, 0.6);\n    delay.process(signal);  \n    \n\n  Reverb(maxDelayInSamplesSize, delayInSamples, masterVolume, mixVolume, delayVolume, dampFrequency): Reverb\n  \n    Usage:\n\n    var reverb = Reverb(20000, 6500, 0.8, 0.5, 0.9, 4500);\n    reverb.process(signal); \n\n\n@corban                                                    weare.buildingsky.net\n________________________________________________________________________________\n\n       Copyright (c) 2010 Corban Brook, released under the MIT license\n                                                                                  \n",
  "readmeFilename": "README",
  "bugs": {
    "url": "https://github.com/zewemli/dsp.js/issues"
  },
  "_id": "digitalsignals@1.0.0",
  "dist": {
    "shasum": "ce7a0725bf7386036ff4dc54f85a634ed8fdc448",
    "tarball": "http://registry.npmjs.org/digitalsignals/-/digitalsignals-1.0.0.tgz"
  },
  "_from": "digitalsignals@",
  "_npmVersion": "1.3.8",
  "_npmUser": {
    "name": "zewemli",
    "email": "me@zacharywemlinger.com"
  },
  "maintainers": [
    {
      "name": "zewemli",
      "email": "me@zacharywemlinger.com"
    }
  ],
  "directories": {},
  "_shasum": "ce7a0725bf7386036ff4dc54f85a634ed8fdc448",
  "_resolved": "https://registry.npmjs.org/digitalsignals/-/digitalsignals-1.0.0.tgz"
}
